package SeleniumTests;// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import nl.utwente.di.team26.Constants;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TestResources {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.chrome.driver", Constants.CHROME_DRIVER);
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  // Adding, editing and deleting a resource could not be tested with Selenium. If a resource is deleted during the test,
  // it cannot be found when the test is run later. Adding and editing a resource cannot be tested because we are required
  // to upload an image which is not possible to test with Selenium.
  public void testResources() throws InterruptedException {
    driver.get("http://localhost:8080/kickInTeam26/");

    // Log in
    driver.findElement(By.id("inputEmail")).sendKeys("priya@email.com");
    driver.findElement(By.id("inputPassword")).click();
    driver.findElement(By.id("inputPassword")).sendKeys("priya");
    driver.findElement(By.id("inputPassword")).sendKeys(Keys.ENTER);
    Thread.sleep(7000);

    // Go to resources page.
    driver.findElement(By.cssSelector(".glyphicon-cog")).click();
    Thread.sleep(7000);

    // Open then close the image of a resource.
    driver.findElement(By.cssSelector("tr:nth-child(2) .glyphicon-eye-open")).click();
    Thread.sleep(7000);
    driver.findElement(By.cssSelector("#imageModal .close")).click();

    // Open then close the image of another resource.
    driver.findElement(By.cssSelector("tr:nth-child(3) .glyphicon-eye-open")).click();
    Thread.sleep(7000);
    driver.findElement(By.cssSelector("#imageModal .close")).click();

    // Search for the resource with the name "skittles" and opens its image.
    driver.findElement(By.id("searchTable")).click();
    driver.findElement(By.id("searchTable")).sendKeys("skittles");
    driver.findElement(By.cssSelector("tr:nth-child(12) .glyphicon-eye-open")).click();
    Thread.sleep(7000);
    driver.findElement(By.cssSelector("#imageModal .close")).click();

    // Clear the input box and search for a resource with the name "does not exist" which is not in the database
    // so an empty table is given.
    driver.findElement(By.id("searchTable")).click();
    driver.findElement(By.id("searchTable")).clear();
    driver.findElement(By.id("searchTable")).sendKeys("does not exist");
    Thread.sleep(7000);

    // Clear the input box and search for a resource with the name "d". All resources that contain the letter "d" in the
    // name can be found in the table.
    driver.findElement(By.id("searchTable")).click();
    driver.findElement(By.id("searchTable")).clear();
    driver.findElement(By.id("searchTable")).sendKeys("d");
    Thread.sleep(7000);
  }
}
