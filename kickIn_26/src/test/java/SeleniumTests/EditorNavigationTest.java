package SeleniumTests;// Generated by Selenium IDE
import com.sun.xml.bind.v2.runtime.reflect.opt.Const;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import nl.utwente.di.team26.Constants;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class EditorNavigationTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.chrome.driver", Constants.CHROME_DRIVER);
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }


  @Test
  // A few parts of this test fail due to the alert messages since testing with Selenium does not work well with alerts.
  public void editorNavigation() throws InterruptedException {
    driver.get(Constants.ISSUER);

    // Log in.
    driver.findElement(By.id("inputEmail")).sendKeys("editor@gmail.com");
    driver.findElement(By.id("inputPassword")).sendKeys("editor");
    driver.findElement(By.id("inputPassword")).sendKeys(Keys.ENTER);
    Thread.sleep(7000);

    // Add an event which is not possible as an editor.
    driver.findElement(By.id("addEventBtn")).click();
    driver.findElement(By.id("eventName")).click();
    driver.findElement(By.id("eventName")).sendKeys("AddEvent");
    driver.findElement(By.id("eventDescription")).sendKeys("As Editor");
    driver.findElement(By.id("eventDate")).sendKeys("25-06-2020");
    driver.findElement(By.cssSelector(".bottomright > .align-self-end")).click();
    Thread.sleep(12000);

    // View an event.
    driver.findElement(By.cssSelector("tr:nth-child(2) .glyphicon-eye-open")).click();
    Thread.sleep(7000);

    // Edit an event.
    driver.findElement(By.id("editEvent")).click();
    Thread.sleep(7000);
    driver.findElement(By.id("eventName")).click();
    driver.findElement(By.id("eventName")).sendKeys("Edit Event");
    driver.findElement(By.id("eventDescription")).sendKeys("As an Editor");
    driver.findElement(By.id("eventDescription")).sendKeys(Keys.TAB);
    driver.findElement(By.id("eventDate")).clear();
    driver.findElement(By.id("eventDate")).sendKeys("26-06-2020");
    driver.findElement(By.id("eventLocation")).click();
    {
      WebElement dropdown = driver.findElement(By.id("eventLocation"));
      dropdown.findElement(By.xpath("//option[. = 'Outside Campus (City)']")).click();
    }
    driver.findElement(By.id("eventLocation")).click();
    driver.findElement(By.id("myBtn")).click();
    Thread.sleep(7000);

    // Add a map.
    driver.findElement(By.id("addMap")).click();
    Thread.sleep(7000);
    driver.findElement(By.cssSelector("#addNewMap > .btn")).click();
    Thread.sleep(7000);
    driver.findElement(By.id("mapName")).click();
    driver.findElement(By.id("mapName")).sendKeys("New Map");
    driver.findElement(By.id("description")).sendKeys("Editor");
    driver.findElement(By.cssSelector(".myButton")).click();
    Thread.sleep(12000);

    // Delete a map.
    driver.findElement(By.cssSelector(".glyphicon-trash:nth-child(1)")).click();
    Thread.sleep(7000);
    driver.findElement(By.id("yesMapDelete")).click();
    Thread.sleep(12000);

    // Go back to the previous page.
    driver.findElement(By.id("arrow")).click();
    Thread.sleep(7000);

    // Go back to the home page.
    driver.findElement(By.cssSelector(".glyphicon-home")).click();
    Thread.sleep(12000);

    // Delete an event.
    driver.findElement(By.cssSelector("tr:nth-child(2) .glyphicon-trash")).click();
    driver.findElement(By.id("yesDeleteButton")).click();
    Thread.sleep(7000);

    // Go to the users page.
    driver.findElement(By.cssSelector(".glyphicon-user")).click();
    Thread.sleep(7000);

    // Go to the resources page.
    driver.findElement(By.cssSelector(".glyphicon-cog")).click();
    Thread.sleep(7000);

    // Add a resource.
    driver.findElement(By.id("addResourceBtn")).click();
    driver.findElement(By.id("resourceName")).click();
    driver.findElement(By.id("resourceName")).sendKeys("New Resource");
    driver.findElement(By.id("resourceDescription")).sendKeys("As Editor");
    driver.findElement(By.cssSelector(".custom-control:nth-child(1) > .custom-control-label")).click();
    Thread.sleep(7000);
    driver.findElement(By.cssSelector(".bottomright > .align-self-end")).click();
    Thread.sleep(7000);
    driver.findElement(By.cssSelector("#addResource .close")).click();

    // Log out.
    driver.findElement(By.id("logout")).click();
  }
}
