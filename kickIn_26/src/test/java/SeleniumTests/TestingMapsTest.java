// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TestingMapsTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testingMaps() {
    driver.get("http://localhost:8080/kickInTeam26/");
    driver.manage().window().setSize(new Dimension(1781, 1020));
    driver.findElement(By.id("inputEmail")).sendKeys("admin@gmail.com");
    {
      WebElement element = driver.findElement(By.cssSelector(".btn"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.id("inputPassword")).sendKeys("adminpass");
    driver.findElement(By.cssSelector(".btn")).click();
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".dropdown-toggle"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector("tr:nth-child(5) .glyphicon-eye-open")).click();
    driver.findElement(By.cssSelector("tr:nth-child(2) .glyphicon-eye-open")).click();
    driver.findElement(By.cssSelector(".glyphicon-wrench")).click();
    driver.findElement(By.id("mapName")).click();
    driver.findElement(By.id("mapName")).sendKeys("edit");
    driver.findElement(By.id("mapDescription")).click();
    driver.findElement(By.id("mapDescription")).sendKeys("edit map name");
    driver.findElement(By.id("editBtn")).click();
    driver.findElement(By.cssSelector(".glyphicon-globe")).click();
    driver.findElement(By.id("addMapBtn")).click();
    driver.findElement(By.id("mapName")).click();
    driver.findElement(By.id("mapName")).click();
    driver.findElement(By.cssSelector(".col-md-3:nth-child(2)")).click();
    driver.findElement(By.id("mapName")).sendKeys("testingformaps");
    driver.findElement(By.id("mapDescription")).click();
    driver.findElement(By.id("mapDescription")).sendKeys("testing for maps");
    driver.findElement(By.cssSelector(".bottomright > .align-self-end")).click();
    driver.findElement(By.id("searchTable")).click();
    driver.findElement(By.id("searchTable")).sendKeys("testingformaps");
    driver.findElement(By.cssSelector("tr:nth-child(25) .glyphicon-eye-open")).click();
    driver.findElement(By.id("mapEditBtn")).click();
    driver.findElement(By.cssSelector(".w3-bar-item:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".w3-bar-item:nth-child(4)")).click();
    driver.findElement(By.id("input649")).click();
    driver.findElement(By.id("input649")).sendKeys("1");
    driver.findElement(By.id("input275")).click();
    driver.findElement(By.id("input275")).sendKeys("1");
    driver.findElement(By.id("input565")).click();
    driver.findElement(By.id("input565")).sendKeys("1");
    driver.findElement(By.cssSelector("tr:nth-child(1) .btn")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("tr:nth-child(1) .btn"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector("tr:nth-child(2) .btn")).click();
    driver.findElement(By.cssSelector("tr:nth-child(3) .btn")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(4)")).click();
    driver.findElement(By.cssSelector(".ldi-scale")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(4)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(4)"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(4)"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-marker-icon:nth-child(16)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".ldi-scale")).click();
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(3)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(3)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-map-pane")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(3)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".ldi-scale")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-marker-icon:nth-child(17)")).click();
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".ldi-scale")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-marker-icon:nth-child(14)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".leaflet-drag-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(1)")).click();
    driver.findElement(By.cssSelector("li:nth-child(10) > .leaflet-toolbar-icon")).click();
    assertThat(driver.switchTo().alert().getText(), is("Are you sure? This image will be permanently deleted from the map."));
    driver.switchTo().alert().accept();
    driver.findElement(By.cssSelector(".leaflet-image-layer:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".ldi-delete_forever")).click();
    assertThat(driver.switchTo().alert().getText(), is("Are you sure? This image will be permanently deleted from the map."));
    driver.switchTo().alert().accept();
    driver.findElement(By.cssSelector(".w3-bar-item:nth-child(6)")).click();
    driver.findElement(By.cssSelector(".w3-bar-item:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".glyphicon-globe")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".glyphicon-cog"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.id("searchTable")).click();
    driver.findElement(By.id("searchTable")).sendKeys("testingformaps");
    driver.findElement(By.cssSelector("tr:nth-child(25) .glyphicon-eye-open")).click();
    driver.findElement(By.cssSelector(".A4Landscape")).click();
    driver.findElement(By.cssSelector(".glyphicon-globe")).click();
    driver.findElement(By.id("searchTable")).click();
    driver.findElement(By.id("searchTable")).sendKeys("testingformaps");
    driver.findElement(By.cssSelector("tr:nth-child(25) .glyphicon-trash")).click();
    driver.findElement(By.id("yesDeleteButton")).click();
    driver.findElement(By.id("logout")).click();
  }
}
